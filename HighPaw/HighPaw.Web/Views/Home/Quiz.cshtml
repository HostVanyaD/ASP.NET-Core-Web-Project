@model PetQueryServiceModel

@{
    ViewBag.Title = "Quiz";
}

<style>
    body {
        font-size: 20px;
        font-family: 'Work Sans', sans-serif;
        color: #333;
        font-weight: 300;
        text-align: center;
        background-color: #f8f6f0;
    }

    h1 {
        font-weight: 300;
        margin: 0px;
        padding: 10px;
        font-size: 20px;
        background-color: #fdc57b;
        color: #fff;
    }

    .question {
        font-size: 30px;
        margin-bottom: 10px;
    }

    .answers {
        margin-bottom: 20px;
        text-align: left;
        display: inline-block;
    }

    .answers label {
        display: block;
        margin-bottom: 10px;
    }

    button {
        font-family: 'Work Sans', sans-serif;
        font-size: 22px;
        background-color: #5e9693;
        color: #fff;
        border: 0px;
        border-radius: 3px;
        padding: 20px;
        cursor: pointer;
        margin-bottom: 20px;
        margin-top: 4rem;
    }

    button:hover {
        background-color: #38a;
    }

    .slide {
        position: absolute;
        left: 0px;
        top: 0px;
        width: 100%;
        z-index: 1;
        opacity: 0;
        transition: opacity 0.5s;
    }

    .active-slide {
        opacity: 1;
        z-index: 2;
    }

    .quiz-container {
        position: relative;
        height: 200px;
        margin-top: 40px;
    }
</style>

<h1 style="margin-top: 5rem;">We will help you to find the perfect pet!</h1>
<div class="quiz-container">
    <div id="quiz"></div>
</div>
<button id="previous">Previous Question</button>
<button id="next">Next Question</button>
<button id="submit">Submit Quiz</button>

<script>
    (function () {
        // Functions
        function buildQuiz() {
            // variable to store the HTML output
            const output = [];

            // for each question...
            quizQuestions.forEach(
                (currentQuestion, questionNumber) => {

                    // variable to store the list of possible answers
                    const answers = [];

                    // and for each available answer...
                    for (letter in currentQuestion.answers) {

                        // ...add an HTML radio button
                        answers.push(
                            `<label>
                  <input type="radio" name="question${questionNumber}" value="${letter}">
                  ${letter} :
                  ${currentQuestion.answers[letter]}
                </label>`
                        );
                    }

                    // add this question and its answers to the output
                    output.push(
                        `<div class="slide">
                <div class="question"> ${currentQuestion.question} </div>
                <div class="answers"> ${answers.join("")} </div>
              </div>`
                    );
                }
            );

            // finally combine our output list into one string of HTML and put it on the page
            quizContainer.innerHTML = output.join('');
        }

        function showResults() {

            // gather answer containers from our quiz
            const answerContainers = quizContainer.querySelectorAll('.answers');

            // for each question...
            quizQuestions.forEach((currentQuestion, questionNumber) => {

                // find selected answer
                const answerContainer = answerContainers[questionNumber];
                const selector = `input[name=question${questionNumber}]:checked`;
                const userAnswer = (answerContainer.querySelector(selector) || {}).value;
                results.push(userAnswer);
            });

            window.open('Results?Filters=' + results);
        }

        function showSlide(n) {
            slides[currentSlide].classList.remove('active-slide');
            slides[n].classList.add('active-slide');
            currentSlide = n;
            if (currentSlide === 0) {
                previousButton.style.display = 'none';
            } else {
                previousButton.style.display = 'inline-block';
            }
            if (currentSlide === slides.length - 1) {
                nextButton.style.display = 'none';
                submitButton.style.display = 'inline-block';
            } else {
                nextButton.style.display = 'inline-block';
                submitButton.style.display = 'none';
            }
        }

        function showNextSlide() {
            showSlide(currentSlide + 1);
        }

        function showPreviousSlide() {
            showSlide(currentSlide - 1);
        }

        // Variables
        const quizContainer = document.getElementById('quiz');
        const submitButton = document.getElementById('submit');
        const results = [];
        const quizQuestions = [{
                question: "What size is your perfect pet?",
                answers: {
                    a: "Doesn't matter",
                    b: "Small <= 10kg",
                    c: "Medium 11-25kg",
                    d: "Large 26-45kg",
                    e: "Extra Large > 45kg",
                }
            },
            {
                question: "How about the age of the pet?",
                answers: {
                    a: "Doesn't matter",
                    b: "Puppy - cute but full time",
                    c: "Young - still learning",
                    d: "Adult - ready for love",
                    e: "Senior - great for first time adopters",
                }
            },
            {
                question: "And what about gender?",
                answers: {
                    a: "Doesn't matter",
                    b: "Male",
                    c: "Female",
                }
            }
        ];

        // Kick things off
        buildQuiz();

        // Pagination
        const previousButton = document.getElementById("previous");
        const nextButton = document.getElementById("next");
        const slides = document.querySelectorAll(".slide");
        let currentSlide = 0;

        // Show the first slide
        showSlide(currentSlide);

        // Event listeners
        submitButton.addEventListener('click', showResults);
        previousButton.addEventListener("click", showPreviousSlide);
        nextButton.addEventListener("click", showNextSlide);
    })();
</script>